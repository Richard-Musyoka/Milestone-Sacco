@page "/guarantors/view/{GuarantorId:int}"
@using Microsoft.AspNetCore.Components
@using SaccoManagementSystem.Models
@inject NavigationManager NavigationManager
@inject IHttpClientFactory _httpClientFactory
@inject IJSRuntime JSRuntime

<style>
    :root {
        --primary-color: #4361ee;
        --primary-light: #eef2ff;
        --secondary-color: #3f37c9;
        --success-color: #4cc9f0;
        --warning-color: #f8961e;
        --danger-color: #f94144;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --border-radius: 12px;
        --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .guarantor-view-container {
        max-width: 900px;
        margin: 2rem auto;
        padding: 0 1.5rem;
        animation: fadeIn 0.5s ease-out;
    }

    .guarantor-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        transition: var(--transition);
    }

        .guarantor-card:hover {
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            transform: translateY(-2px);
        }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.75rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

        .card-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }

        .card-header h3 {
            margin: 0;
            font-weight: 600;
            display: flex;
            align-items: center;
            position: relative;
            z-index: 1;
            font-size: 1.5rem;
        }

        .card-header i {
            font-size: 1.75rem;
            margin-right: 0.75rem;
        }

    .card-body {
        padding: 2.5rem;
    }

    .guarantor-profile {
        display: flex;
        gap: 2.5rem;
        margin-bottom: 3rem;
        align-items: center;
        animation: slideUp 0.6s ease-out 0.2s both;
    }

    .profile-image {
        width: 140px;
        height: 140px;
        border-radius: 50%;
        background: var(--primary-light);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3.5rem;
        color: var(--primary-color);
        border: 4px solid var(--primary-color);
        box-shadow: 0 4px 15px rgba(67, 97, 238, 0.2);
        transition: var(--transition);
    }

        .profile-image:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.3);
        }

    .profile-details {
        flex: 1;
    }

    .profile-name {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: var(--dark-color);
    }

    .profile-id {
        color: #6c757d;
        margin-bottom: 1rem;
        font-size: 1rem;
    }

    .badge {
        font-weight: 600;
        padding: 0.5em 1em;
        border-radius: 50px;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
        text-transform: uppercase;
    }

        .badge.active {
            background-color: var(--success-color);
            color: white;
        }

        .badge.inactive {
            background-color: var(--warning-color);
            color: var(--dark-color);
        }

    .detail-row {
        display: flex;
        margin-bottom: 1.25rem;
        animation: fadeIn 0.5s ease-out;
    }

        .detail-row:nth-child(1) {
            animation-delay: 0.3s;
        }

        .detail-row:nth-child(2) {
            animation-delay: 0.35s;
        }

        .detail-row:nth-child(3) {
            animation-delay: 0.4s;
        }
    /* Continue for all detail rows */

    .detail-label {
        width: 180px;
        font-weight: 600;
        color: #495057;
        font-size: 0.95rem;
    }

    .detail-value {
        flex: 1;
        font-weight: 500;
        color: var(--dark-color);
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--dark-color);
        margin: 2.5rem 0 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid #f0f2f5;
        position: relative;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 60px;
            height: 2px;
            background: var(--primary-color);
        }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 1.25rem;
        margin-top: 3rem;
    }

    .btn {
        padding: 0.75rem 1.75rem;
        border-radius: 50px;
        font-weight: 600;
        transition: var(--transition);
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        border: none;
    }

    .btn-outline-secondary {
        background: white;
        color: var(--dark-color);
        border: 1px solid #dee2e6;
    }

        .btn-outline-secondary:hover {
            background: #f8f9fa;
            transform: translateY(-2px);
        }

    .btn-primary {
        background: var(--primary-color);
        color: white;
        box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
    }

        .btn-primary:hover {
            background: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(67, 97, 238, 0.4);
        }

    .alert-danger {
        background: rgba(249, 65, 68, 0.1);
        border-left: 4px solid var(--danger-color);
        border-radius: var(--border-radius);
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .guarantor-profile {
            flex-direction: column;
            align-items: center;
            text-align: center;
            gap: 1.5rem;
        }

        .detail-row {
            flex-direction: column;
            gap: 0.25rem;
        }

        .detail-label {
            width: 100%;
            margin-bottom: 0.25rem;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }

        .card-body {
            padding: 1.75rem;
        }
    }
</style>

<div class="guarantor-view-container">
    <div class="guarantor-card">
        <div class="card-header">
            <h3><i class="bi bi-person-check"></i> Guarantor Details</h3>
            <span class="badge @(guarantor?.IsActive ?? false ? "active" : "inactive")">
                @(guarantor?.IsActive ?? false ? "Active" : "Inactive")
            </span>
        </div>

        <div class="card-body">
            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Loading guarantor details...</p>
                </div>
            }
            else if (guarantor != null)
            {
                <div class="guarantor-profile">
                    <div class="profile-image">
                        @guarantor.FirstName[0]@guarantor.LastName[0]
                    </div>
                    <div class="profile-details">
                        <div class="profile-name">@guarantor.FirstName @guarantor.LastName</div>
                        <div class="profile-id">ID: @guarantor.IDNumber</div>
                        <div class="text-muted">Guarantor ID: GR-@guarantor.GuarantorId.ToString("D3")</div>
                    </div>
                </div>

                <div class="section-title">Personal Information</div>
                <div class="detail-row">
                    <div class="detail-label">First Name:</div>
                    <div class="detail-value">@guarantor.FirstName</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Last Name:</div>
                    <div class="detail-value">@guarantor.LastName</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">ID Number:</div>
                    <div class="detail-value">@guarantor.IDNumber</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Date of Birth:</div>
                    <div class="detail-value">@(guarantor.DateOfBirth?.ToString("MMMM dd, yyyy") ?? "Not specified")</div>
                </div>

                <div class="section-title">Contact Information</div>
                <div class="detail-row">
                    <div class="detail-label">Phone Number:</div>
                    <div class="detail-value">
                        @if (!string.IsNullOrEmpty(guarantor.PhoneNumber))
                        {
                            <a href="tel:@guarantor.PhoneNumber" class="text-decoration-none">@guarantor.PhoneNumber</a>
                        }
                        else
                        {
                            <span>Not specified</span>
                        }
                    </div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Email:</div>
                    <div class="detail-value">
                        @if (!string.IsNullOrEmpty(guarantor.Email))
                        {
                            <a href="mailto:@guarantor.Email" class="text-decoration-none">@guarantor.Email</a>
                        }
                        else
                        {
                            <span>Not specified</span>
                        }
                    </div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Physical Address:</div>
                    <div class="detail-value">@(guarantor.PhysicalAddress ?? "Not specified")</div>
                </div>

                <div class="section-title">System Information</div>
                <div class="detail-row">
                    <div class="detail-label">Status:</div>
                    <div class="detail-value">
                        <span class="badge @(guarantor.IsActive ? "active" : "inactive")">
                            @(guarantor.IsActive ? "Active" : "Inactive")
                        </span>
                    </div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Created On:</div>
                    <div class="detail-value">@guarantor.CreatedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Last Modified:</div>
                    <div class="detail-value">@guarantor.LastModifiedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")</div>
                </div>
                <div class="detail-row">
                    <div class="detail-label">Remarks:</div>
                    <div class="detail-value">@(guarantor.Remarks ?? "None")</div>
                </div>

                <div class="action-buttons">
                    <button class="btn btn-outline-secondary" @onclick="NavigateBack">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </button>
                    <button class="btn btn-primary" @onclick="() => EditGuarantor(guarantor.GuarantorId)">
                        <i class="bi bi-pencil"></i> Edit Profile
                    </button>
                </div>
            }
            else
            {
                <div class="alert alert-danger p-4">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-exclamation-triangle-fill me-3" style="font-size: 1.5rem;"></i>
                        <div>
                            <h5 class="mb-1">Guarantor Not Found</h5>
                            <p class="mb-0">The requested guarantor could not be found in our records.</p>
                        </div>
                    </div>
                </div>
                <div class="text-center mt-4">
                    <button class="btn btn-outline-secondary" @onclick="NavigateBack">
                        <i class="bi bi-arrow-left"></i> Back to Guarantors List
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int GuarantorId { get; set; }

    private HttpClient Http => _httpClientFactory.CreateClient("ApiClient");
    private Guarantor? guarantor;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadGuarantor();
    }

    private async Task LoadGuarantor()
    {
        try
        {
            // Simulate loading for demo purposes (remove in production)
            await Task.Delay(500);

            guarantor = await Http.GetFromJsonAsync<Guarantor>($"api/guarantors/{GuarantorId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading guarantor: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/guarantors");
    }

    private void EditGuarantor(int id)
    {
        NavigationManager.NavigateTo($"/guarantors/edit/{id}");
    }
}